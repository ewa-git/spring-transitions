# --------------------------------------------- #
### Konfiguracja połączenia do bazy danych H2 ###
# --------------------------------------------- #

# Baza danych zapisywana do pliku
spring.datasource.url=jdbc:h2:${dbtype:file}:~/${dbname:exampleDB}

# Dane użytkownika do połączenia
spring.datasource.username=${dbuser:root}
spring.datasource.password=${dbpass:pass}

# Dane sterownika
spring.datasource.driver-class-name=org.h2.Driver

# Konfiguracja Hibernate / JPA
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.characterEncoding=utf8


# ---------------------------------------------- #
### Konfiguracja konsoli dostępowej do bazy H2 ###
# ---------------------------------------------- #

# Ścieżka konsoli
spring.h2.console.path=/h2-console

# Włączenie konsoli
spring.h2.console.enabled=true

# Umożliwienie dostępu zewnętrznego
spring.h2.console.settings.web-allow-others=true

# -------------------------- #
### Konfiguracja logowania ###
# -------------------------- #

# Konfiguracja ścieżki do pliku z konfiguracją loggera
logging.config=classpath:logging/dev/logging-config.xml

# ------------------------------ #
### Konfiguracja zapisu plików ###
# ------------------------------ #

# Włączamy jawnie obsługę żądań typu multipart https://stackoverflow.com/questions/16958448/what-is-http-multipart-request
spring.servlet.multipart.enabled=true

# Wskazujemy katalog do tymczasowego zapisu plików (tutaj korzystamy z domyślnego katalogu tmp dla Javy)
spring.servlet.multipart.location=${java.io.tmpdir}/upload

# Określamy maksymany rozmiar żądania (czyli plik + dane albo np. kilka plików)
spring.servlet.multipart.max-request-size=10MB

# Określamy maksymalny rozmiar pojedynczego pliku
spring.servlet.multipart.max-file-size=2MB
